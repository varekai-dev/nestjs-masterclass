var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.291,1,1.822]],["body/controllers/AppController.html",[0,2.162,1,3.05,2,1.787,3,0.654,4,0.569,5,0.569,6,3.366,7,0.743,8,0.039,9,1.303,10,0.654,11,0.028,12,0.034,13,0.034]],["title/modules/AppModule.html",[14,1.291,15,1.822]],["body/modules/AppModule.html",[1,2.721,2,1.681,3,0.444,4,0.386,5,0.386,7,0.91,8,0.04,9,0.885,10,0.444,11,0.019,12,0.026,13,0.026,14,1.929,15,3.429,16,1.353,17,1.353,18,1.712,19,1.712,20,1.353,21,2.721,22,1.712,23,2.286,24,2.286,25,2.286,26,2.827,27,2.827,28,2.827,29,2.372,30,1.712,31,1.712,32,2.784,33,3.166,34,2.784,35,2.784,36,2.784,37,2.784]],["title/injectables/AppService.html",[28,1.613,38,1.291]],["body/injectables/AppService.html",[3,0.578,4,0.503,5,0.503,7,0.658,8,0.04,9,1.153,10,0.578,11,0.025,12,0.031,13,0.031,28,2.504,38,2.004,39,2.231,40,2.978,41,0.834,42,2.504,43,5.307,44,1.153,45,3.628,46,1.976,47,1.802,48,1.976,49,2.978,50,2.978]],["title/classes/CreatePostDto.html",[11,0.02,51,1.44]],["body/classes/CreatePostDto.html",[3,0.175,4,0.152,5,0.152,7,0.637,8,0.04,10,0.175,11,0.017,12,0.013,13,0.013,41,0.252,44,1.355,47,1.839,49,2.882,50,2.001,51,0.907,52,0.43,53,3.086,54,0.771,55,1.062,56,1.72,57,3.227,58,2.437,59,2.437,60,3.239,61,2.437,62,3.227,63,3.747,64,2.268,65,3.227,66,3.227,67,1.614,68,1.857,69,2.362,70,1.598,71,3.406,72,1.096,73,1.096,74,1.867,75,1.867,76,1.867,77,1.096,78,1.096,79,1.769,80,1.096,81,1.867,82,1.532,83,1.532,84,2.006,85,1.713,86,1.867,87,1.867,88,1.096,89,1.096,90,1.096,91,1.867,92,1.096,93,1.096,94,2.877,95,2.001,96,1.532,97,1.867,98,1.867,99,1.096,100,1.096,101,1.096,102,1.096,103,1.096,104,2.877,105,2.877,106,1.867,107,1.867,108,1.096,109,2.649,110,1.096,111,1.096,112,1.096,113,1.096,114,2.877,115,2.877,116,1.096,117,1.096,118,1.096,119,2.437,120,1.096,121,1.867,122,1.867,123,1.769,124,2.468,125,2.268,126,1.867,127,1.096,128,1.096,129,1.867,130,0.533,131,1.867,132,1.096,133,1.096,134,0.597,135,1.096,136,0.771,137,2.882,138,2.882,139,0.533,140,1.096,141,1.867,142,1.096,143,1.096,144,1.096,145,1.867,146,1.096,147,1.096,148,1.096,149,1.096,150,1.096,151,0.9,152,1.867,153,0.771]],["title/classes/CreatePostMetaOptionsDto.html",[11,0.02,79,1.822]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.508,4,0.442,5,0.442,7,0.577,8,0.039,10,0.508,11,0.029,12,0.029,13,0.029,41,0.732,44,1.343,47,1.979,52,1.248,53,3.333,55,1.841,67,1.343,68,1.841,70,1.507,79,2.598,85,3.333,123,2.915,125,3.333,130,1.547,151,3.892,153,3.333,154,2.614,155,3.468,156,3.184,157,3.184]],["title/classes/CreateUserDto.html",[11,0.02,158,1.613]],["body/classes/CreateUserDto.html",[3,0.442,4,0.385,5,0.385,7,0.503,8,0.039,10,0.442,11,0.026,12,0.026,13,0.026,41,0.637,44,1.516,47,2.124,52,1.086,55,1.676,56,1.676,67,1.516,68,2.078,123,2.932,124,2.703,125,3.352,130,1.347,155,3.156,158,2.094,159,4.112,160,1.948,161,3.624,162,4.415,163,4.415,164,4.415,165,2.771,166,2.771,167,2.771,168,2.771,169,2.771,170,2.771,171,3.845]],["title/classes/GetUserParamDto.html",[11,0.02,172,1.822]],["body/classes/GetUserParamDto.html",[3,0.487,4,0.424,5,0.424,7,0.842,8,0.04,10,0.487,11,0.032,12,0.028,13,0.028,41,0.702,44,0.971,52,1.197,55,1.791,56,1.791,67,1.476,68,1.331,69,2.507,71,2.888,84,1.331,124,2.888,130,1.484,136,2.147,138,3.373,139,1.484,172,2.526,173,3.373,174,3.491,175,2.507,176,2.518,177,2.528,178,3.054,179,3.054,180,3.373,181,3.054]],["title/classes/PatchUserDto.html",[11,0.02,182,1.822]],["body/classes/PatchUserDto.html",[3,0.608,4,0.529,5,0.529,7,0.86,8,0.039,10,0.608,11,0.026,12,0.032,13,0.032,52,1.494,134,2.076,158,2.076,160,2.68,182,2.917,183,3.13,184,3.894,185,4.744,186,3.13,187,3.13,188,3.13,189,3.13]],["title/classes/Post.html",[11,0.02,70,0.942]],["body/classes/Post.html",[3,0.682,4,0.593,5,0.593,8,0.037,10,0.682,11,0.029,12,0.035,13,0.035,52,1.676,70,1.617,190,3.51]],["title/controllers/PostsController.html",[0,1.291,191,1.822]],["body/controllers/PostsController.html",[0,0.779,2,0.779,3,0.285,4,0.248,5,0.248,7,0.757,8,0.04,9,0.568,10,0.285,11,0.012,12,0.019,13,0.019,41,0.411,42,1.515,44,1.328,46,2.275,47,1.923,48,2.275,51,2.15,56,1.68,64,1.256,67,1.225,68,1.82,70,1.328,84,1.212,134,2.099,139,0.868,176,2.15,191,1.71,192,1.467,193,1.467,194,1.467,195,3.164,196,2.284,197,2.284,198,2.284,199,1.467,200,1.787,201,1.955,202,1.787,203,2.782,204,2.782,205,2.284,206,1.787,207,2.37,208,2.37,209,1.787,210,1.467,211,2.284,212,1.787,213,1.467,214,2.782,215,1.787,216,1.467,217,2.601,218,2.284,219,1.787,220,2.284,221,1.467,222,1.467,223,1.787,224,1.66,225,1.467,226,1.256,227,1.955,228,1.467,229,2.284,230,2.284,231,1.467,232,1.787,233,1.787,234,1.787,235,1.787,236,1.467,237,1.787,238,1.787,239,1.787,240,1.787,241,1.787,242,1.787,243,1.787,244,1.787,245,1.787]],["title/modules/PostsModule.html",[14,1.291,26,1.613]],["body/modules/PostsModule.html",[2,1.854,3,0.513,4,0.447,5,0.447,7,0.864,8,0.039,9,1.023,10,0.513,11,0.022,12,0.029,13,0.029,14,2.077,16,1.564,17,1.564,18,1.979,19,1.979,20,1.564,21,2.931,22,1.979,26,2.95,29,2.616,30,1.979,31,1.979,191,2.931,224,2.633,225,2.642,246,2.642,247,2.642,248,3.218,249,3.218]],["title/injectables/PostsService.html",[38,1.291,224,1.44]],["body/injectables/PostsService.html",[3,0.336,4,0.293,5,0.293,7,0.686,8,0.04,9,0.67,10,0.336,11,0.014,12,0.021,13,0.021,38,1.375,39,1.296,41,0.484,42,1.718,44,1.429,46,2.665,47,1.763,48,2.449,51,2.185,56,1.83,67,1.335,70,1.335,134,1.718,176,2.294,177,2.802,194,1.73,195,3.448,196,2.591,197,2.591,198,2.591,199,2.591,201,1.482,207,2.582,208,2.582,210,2.591,213,2.591,216,2.591,217,2.665,224,1.534,226,1.482,227,2.218,228,1.73,250,1.73,251,2.108,252,2.108,253,2.108,254,2.108,255,2.108,256,2.108,257,4.497,258,2.108,259,2.108,260,2.108]],["title/classes/UpdatePostDto.html",[11,0.02,217,1.613]],["body/classes/UpdatePostDto.html",[3,0.502,4,0.437,5,0.437,7,0.855,8,0.04,10,0.502,11,0.029,12,0.029,13,0.029,41,0.724,44,1.001,51,1.531,52,1.235,54,2.215,55,1.828,67,1.001,68,1.373,70,1.001,84,1.373,95,2.586,123,2.579,130,1.531,134,1.716,137,3.444,139,1.531,176,2.545,177,2.284,180,3.444,184,3.444,186,2.586,217,2.284,227,2.215,261,3.444,262,4.195,263,3.151,264,3.151]],["title/controllers/UserController.html",[0,1.291,265,1.822]],["body/controllers/UserController.html",[0,0.758,2,0.758,3,0.277,4,0.241,5,0.241,7,0.748,8,0.04,9,0.553,10,0.277,11,0.012,12,0.019,13,0.019,41,0.4,42,1.484,44,1.067,46,1.829,47,1.715,48,1.829,56,1.463,64,1.223,67,1.454,68,1.463,70,1.067,82,3.119,83,3.119,84,1.656,139,0.846,158,2.069,172,2.69,174,2.361,176,1.324,177,2.382,182,2.336,189,2.237,193,1.428,205,1.428,207,2.065,208,2.537,211,1.428,218,2.237,220,3.754,221,1.428,222,1.428,226,1.223,229,2.237,230,2.237,231,1.428,236,1.428,265,1.675,266,1.428,267,3.358,268,2.725,269,2.725,270,2.725,271,1.74,272,4.125,273,1.74,274,1.74,275,4.125,276,1.74,277,2.725,278,2.725,279,1.74,280,1.74,281,3.8,282,1.74,283,3.119,284,2.725,285,1.74,286,1.74,287,1.74,288,1.74,289,1.74,290,1.74,291,3.358,292,1.74,293,1.74,294,1.74,295,1.74,296,1.74,297,1.74,298,1.74,299,1.74,300,1.74,301,2.725,302,1.74,303,1.74,304,1.74]],["title/modules/UserModule.html",[14,1.291,27,1.613]],["body/modules/UserModule.html",[2,1.772,3,0.48,4,0.417,5,0.417,7,0.835,8,0.039,9,0.956,10,0.48,11,0.02,12,0.028,13,0.028,14,2.008,16,1.462,17,1.462,18,1.85,19,1.85,20,1.462,21,2.833,22,2.833,27,2.958,29,2.501,30,1.85,31,1.85,33,2.469,265,2.833,305,2.469,306,2.469,307,2.469,308,3.134,309,3.008,310,3.008,311,3.008]],["title/injectables/UserService.html",[38,1.291,308,1.613]],["body/injectables/UserService.html",[3,0.51,4,0.444,5,0.444,7,0.58,8,0.04,9,1.017,10,0.51,11,0.022,12,0.029,13,0.029,38,1.848,39,1.968,41,0.735,42,2.309,44,1.017,46,1.743,47,1.662,48,1.743,56,1.395,67,1.017,161,3.48,176,2.459,177,2.756,207,1.968,208,2.923,308,2.309,312,2.628,313,4.24,314,4.24,315,3.201,316,3.201,317,3.201,318,3.201]],["title/coverage.html",[319,2.83]],["body/coverage.html",[0,1.851,1,1.586,5,0.358,6,2.118,8,0.039,11,0.035,12,0.025,13,0.025,20,1.254,28,1.405,38,1.851,40,2.118,51,1.254,53,2.571,54,2.571,67,0.82,70,1.162,79,1.586,85,1.814,154,2.118,158,1.405,159,2.118,160,2.571,172,1.586,173,2.118,174,1.814,175,2.118,182,1.586,183,2.118,190,2.118,191,1.586,192,2.118,201,1.814,217,1.405,224,1.254,250,2.118,261,2.118,265,1.586,266,2.118,308,1.405,312,2.118,319,1.814,320,2.58,321,2.58,322,2.58,323,5.693,324,4.621,325,4.621,326,2.118,327,2.58,328,2.58,329,2.58,330,3.657,331,2.58,332,2.58,333,2.58,334,2.58]],["title/dependencies.html",[17,1.729,335,2.039]],["body/dependencies.html",[8,0.04,9,1.146,11,0.031,12,0.031,13,0.031,17,1.752,130,1.752,136,2.535,139,1.752,187,2.96,188,2.96,336,3.606,337,3.606,338,5.034,339,3.606,340,3.606,341,3.606,342,3.606,343,3.606,344,3.606,345,3.606,346,3.606,347,3.606,348,3.606,349,3.606,350,3.606]],["title/miscellaneous/enumerations.html",[351,1.527,352,2.921]],["body/miscellaneous/enumerations.html",[8,0.039,12,0.03,13,0.03,41,0.777,60,3.608,70,1.397,96,3.608,109,3.608,153,3.985,283,3.608,351,2.079,352,2.776,353,4.395,354,4.395,355,4.395,356,4.395,357,4.395,358,4.395,359,4.395,360,4.395,361,4.395]],["title/miscellaneous/functions.html",[351,1.527,362,2.921]],["body/miscellaneous/functions.html",[8,0.035,12,0.035,13,0.035,20,2.655,41,0.997,326,3.561,351,2.667,362,3.561,363,4.338]],["title/index.html",[41,0.571,364,2.483,365,2.483]],["body/index.html",[4,0.369,8,0.039,12,0.025,13,0.025,71,3.036,84,1.159,319,1.87,366,2.66,367,2.66,368,3.737,369,2.66,370,2.66,371,2.66,372,2.66,373,2.66,374,2.66,375,4.319,376,2.66,377,2.66,378,2.66,379,2.66,380,5.256,381,2.66,382,2.66,383,2.66,384,5.117,385,2.66,386,2.66,387,3.737,388,2.66,389,2.66,390,2.66,391,2.66,392,3.737,393,3.737,394,2.66,395,2.66,396,2.66,397,3.737,398,3.737,399,2.66,400,2.66,401,2.66,402,2.66,403,2.66,404,2.184,405,2.66,406,2.66,407,2.66,408,2.66,409,2.66,410,2.66,411,2.66,412,2.66,413,2.66,414,2.66,415,2.184,416,2.66,417,2.66,418,2.66,419,2.66,420,2.66,421,2.66,422,2.184]],["title/modules.html",[16,1.956]],["body/modules.html",[8,0.034,12,0.034,13,0.034,15,2.521,16,1.993,26,2.233,27,2.233,404,4.378,423,5.333,424,5.333,425,5.333]],["title/overview.html",[426,3.304]],["body/overview.html",[2,1.331,8,0.038,12,0.028,13,0.028,14,1.331,15,3.409,16,1.484,17,1.484,18,1.878,19,1.878,20,1.484,21,1.878,22,1.878,23,2.507,24,2.507,25,2.507,26,2.822,27,2.906,28,2.528,29,2.526,30,1.878,31,1.878,39,1.878,52,1.197,224,2.256,246,2.507,247,2.507,305,2.507,306,2.507,307,2.507,308,2.97,426,2.507,427,4.643,428,3.054]],["title/properties.html",[55,1.551,335,2.039]],["body/properties.html",[8,0.04,12,0.034,13,0.034,55,1.85,84,1.85,415,3.485,422,3.485,429,4.245,430,4.245,431,4.245]],["title/routes.html",[432,3.304]],["body/routes.html",[8,0.036,12,0.036,13,0.036,432,3.751]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":430,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":98,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t00:00:00.000z",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t00:00:00.000z'})@isiso8601",{"_index":99,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1.1.25",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["1234",{"_index":181,"title":{},"body":{"classes/GetUserParamDto.html":{}}}],["1234})@isint()@isoptional()@type(undefined",{"_index":178,"title":{},"body":{"classes/GetUserParamDto.html":{}}}],["2.0.5",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":294,"title":{},"body":{"controllers/UserController.html":{}}}],["200})@apiquery({name",{"_index":280,"title":{},"body":{"controllers/UserController.html":{}}}],["201",{"_index":203,"title":{},"body":{"controllers/PostsController.html":{}}}],["2021",{"_index":97,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["3",{"_index":427,"title":{},"body":{"overview.html":{}}}],["7",{"_index":428,"title":{},"body":{"overview.html":{}}}],["7.4.1",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":105,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["action",{"_index":257,"title":{},"body":{"injectables/PostsService.html":{}}}],["adds",{"_index":258,"title":{},"body":{"injectables/PostsService.html":{}}}],["amazing",{"_index":405,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":229,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{}}}],["apiproperty({description",{"_index":95,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{}}}],["apiproperty({enum",{"_index":91,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{}}}],["apipropertyoptional({description",{"_index":69,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{}}}],["apipropertyoptional({type",{"_index":80,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":291,"title":{},"body":{"controllers/UserController.html":{}}}],["apiresponse",{"_index":230,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":231,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["apitags('posts",{"_index":233,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":293,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":382,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":374,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":15,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":28,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archived",{"_index":358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["array",{"_index":81,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["author",{"_index":415,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":406,"title":{},"body":{"index.html":{}}}],["body",{"_index":220,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":425,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":423,"title":{},"body":{"modules.html":{}}}],["building",{"_index":369,"title":{},"body":{"index.html":{}}}],["class",{"_index":11,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"classes/UpdatePostDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":52,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"classes/UpdatePostDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":246,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_providers",{"_index":247,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":305,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":306,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":307,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["console.log(body",{"_index":301,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(createpostdto",{"_index":256,"title":{},"body":{"injectables/PostsService.html":{}}}],["console.log(getuserparamdto",{"_index":296,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(id",{"_index":303,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(ip",{"_index":300,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(query",{"_index":297,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor(private",{"_index":234,"title":{},"body":{"controllers/PostsController.html":{}}}],["content",{"_index":57,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/PostsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PostsController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('posts",{"_index":232,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":292,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":319,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{}}}],["create(@body",{"_index":237,"title":{},"body":{"controllers/PostsController.html":{}}}],["create(createpostdto",{"_index":199,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["created",{"_index":205,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["createpostdto",{"_index":51,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":79,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["createuser",{"_index":268,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":299,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(body",{"_index":271,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":158,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["date",{"_index":94,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":68,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{}}}],["defined",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":223,"title":{},"body":{"controllers/PostsController.html":{}}}],["delete(':id",{"_index":214,"title":{},"body":{"controllers/PostsController.html":{}}}],["deleted",{"_index":359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":17,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":84,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":383,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":317,"title":{},"body":{"injectables/UserService.html":{}}}],["draft",{"_index":357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto/create",{"_index":226,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{}}}],["dto/get",{"_index":288,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/path",{"_index":290,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/update",{"_index":228,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["e2e",{"_index":394,"title":{},"body":{"index.html":{}}}],["each",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":370,"title":{},"body":{"index.html":{}}}],["email",{"_index":161,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["enum",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":352,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/post",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":71,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{},"index.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":184,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["false",{"_index":83,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UserController.html":{}}}],["featured",{"_index":74,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":58,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fetches",{"_index":277,"title":{},"body":{"controllers/UserController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":195,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["findbyid",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":196,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["findone(@param('id",{"_index":240,"title":{},"body":{"controllers/PostsController.html":{}}}],["findone(id",{"_index":210,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["firstname",{"_index":162,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":368,"title":{},"body":{"index.html":{}}}],["function",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":362,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":211,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["get(':id?')@apioperation({summary",{"_index":276,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":43,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":364,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":172,"title":{"classes/GetUserParamDto.html":{}},"body":{"classes/GetUserParamDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["getusers",{"_index":269,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(@param",{"_index":295,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(getuserparamdto",{"_index":274,"title":{},"body":{"controllers/UserController.html":{}}}],["grow",{"_index":401,"title":{},"body":{"index.html":{}}}],["hello",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{}}}],["here",{"_index":412,"title":{},"body":{"index.html":{}}}],["https://example.com/image.jpg",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://example.com/image.jpg'})@isoptional()@isurl",{"_index":77,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":419,"title":{},"body":{"index.html":{}}}],["id",{"_index":176,"title":{},"body":{"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":75,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":41,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":38,"title":{"injectables/AppService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":39,"title":{},"body":{"injectables/AppService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":379,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":381,"title":{},"body":{"index.html":{}}}],["ip",{"_index":272,"title":{},"body":{"controllers/UserController.html":{}}}],["isarray",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isemail",{"_index":171,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":165,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":180,"title":{},"body":{"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{}}}],["isiso8601",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["isoptional",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{}}}],["isstring",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":155,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isoptional",{"_index":168,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":87,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["john",{"_index":316,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":408,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":416,"title":{},"body":{"index.html":{}}}],["key",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{}}}],["lastname",{"_index":163,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["legend",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":422,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":398,"title":{},"body":{"index.html":{}}}],["limit",{"_index":281,"title":{},"body":{"controllers/UserController.html":{}}}],["matches",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matches(/^[a",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["message",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["meta",{"_index":85,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":59,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":42,"title":{},"body":{"injectables/AppService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(3",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(4",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["miscellaneous",{"_index":351,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":397,"title":{},"body":{"index.html":{}}}],["mode",{"_index":387,"title":{},"body":{"index.html":{}}}],["module",{"_index":14,"title":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":16,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":411,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":417,"title":{},"body":{"index.html":{}}}],["name",{"_index":208,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":375,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":421,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":187,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":201,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["node.js",{"_index":367,"title":{},"body":{"index.html":{}}}],["npm",{"_index":380,"title":{},"body":{"index.html":{}}}],["number",{"_index":177,"title":{},"body":{"classes/GetUserParamDto.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["object",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["object\"}'})@isoptional()@isjson",{"_index":101,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["open",{"_index":399,"title":{},"body":{"index.html":{}}}],["optional",{"_index":56,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":86,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":154,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":157,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:6",{"_index":156,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":426,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":335,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":283,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":222,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["param.dto",{"_index":289,"title":{},"body":{"controllers/UserController.html":{}}}],["param.dto.ts",{"_index":175,"title":{},"body":{"classes/GetUserParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:13",{"_index":179,"title":{},"body":{"classes/GetUserParamDto.html":{}}}],["parameters",{"_index":207,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":186,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/UpdatePostDto.html":{}}}],["partialtype(createpostdto",{"_index":262,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["partialtype(createuserdto",{"_index":185,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":164,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":221,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":218,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["patchuserdto",{"_index":182,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["please",{"_index":409,"title":{},"body":{"index.html":{}}}],["position",{"_index":284,"title":{},"body":{"controllers/UserController.html":{}}}],["post",{"_index":70,"title":{"classes/Post.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":202,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@isenum(poststatus)@isnotempty",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isenum(posttype",{"_index":92,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isint()@isnotempty",{"_index":263,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["post()@apioperation({summary",{"_index":200,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":227,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{}}}],["post.dto.ts",{"_index":54,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":264,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["post.dto.ts:119",{"_index":90,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:28",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:35",{"_index":93,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:46",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:54",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:62",{"_index":73,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:70",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:78",{"_index":78,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:85",{"_index":100,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:95",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":194,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["posts.controller",{"_index":249,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.service",{"_index":225,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":191,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":26,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":224,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":60,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":193,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["production",{"_index":389,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":366,"title":{},"body":{"index.html":{}}}],["project",{"_index":400,"title":{},"body":{"index.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"properties.html":{}}}],["providers",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["published",{"_index":96,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":61,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["query",{"_index":275,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":410,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":235,"title":{},"body":{"controllers/PostsController.html":{}}}],["reflect",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":278,"title":{},"body":{"controllers/UserController.html":{}}}],["remove",{"_index":197,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["remove(@param('id",{"_index":244,"title":{},"body":{"controllers/PostsController.html":{}}}],["remove(id",{"_index":213,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["removes",{"_index":260,"title":{},"body":{"injectables/PostsService.html":{}}}],["repository",{"_index":378,"title":{},"body":{"index.html":{}}}],["required",{"_index":82,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UserController.html":{}}}],["reset",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["routes",{"_index":432,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":384,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":371,"title":{},"body":{"index.html":{}}}],["schema",{"_index":62,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["serhijsav@gmail.com",{"_index":318,"title":{},"body":{"injectables/UserService.html":{}}}],["series",{"_index":361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":372,"title":{},"body":{"index.html":{}}}],["side",{"_index":373,"title":{},"body":{"index.html":{}}}],["slug",{"_index":63,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/PatchUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":403,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../post",{"_index":353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":40,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":45,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dto/create",{"_index":53,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dto/update",{"_index":261,"title":{},"body":{"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["src/posts/entities/post.entity.ts",{"_index":190,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/posts/enums/post",{"_index":356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":192,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:26",{"_index":206,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:31",{"_index":209,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:36",{"_index":212,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:41",{"_index":219,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:46",{"_index":215,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":248,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/posts.service.ts",{"_index":250,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/posts.service.ts:12",{"_index":252,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:16",{"_index":253,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:20",{"_index":255,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:24",{"_index":254,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:7",{"_index":251,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/user/dto/create",{"_index":159,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/get",{"_index":173,"title":{},"body":{"classes/GetUserParamDto.html":{},"coverage.html":{}}}],["src/user/dto/path",{"_index":183,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":266,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:36",{"_index":285,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:43",{"_index":273,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:50",{"_index":287,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":309,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":312,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:5",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":385,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":388,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":390,"title":{},"body":{"index.html":{}}}],["started",{"_index":365,"title":{"index.html":{}},"body":{}}],["starter",{"_index":377,"title":{},"body":{"index.html":{}}}],["statements",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":64,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["status.enum",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["status.enum.ts",{"_index":354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":413,"title":{},"body":{"index.html":{}}}],["story",{"_index":360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":204,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":236,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UserController.html":{}}}],["support",{"_index":404,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":424,"title":{},"body":{"modules.html":{}}}],["table",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["tag1",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tag2",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tags",{"_index":65,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":393,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":396,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":395,"title":{},"body":{"index.html":{}}}],["tests",{"_index":392,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":402,"title":{},"body":{"index.html":{}}}],["this.postsservice.create(createpostdto",{"_index":238,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findall",{"_index":239,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findone(+id",{"_index":241,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.remove(+id",{"_index":245,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.update(+id",{"_index":243,"title":{},"body":{"controllers/PostsController.html":{}}}],["title",{"_index":66,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["touch",{"_index":414,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUserParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":89,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":420,"title":{},"body":{"index.html":{}}}],["type",{"_index":67,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["type.enum",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type.enum.ts",{"_index":355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":188,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":376,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":88,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":391,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":431,"title":{},"body":{"properties.html":{}}}],["update",{"_index":198,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["update(@param('id",{"_index":242,"title":{},"body":{"controllers/PostsController.html":{}}}],["update(id",{"_index":216,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["updated",{"_index":304,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepostdto",{"_index":217,"title":{"classes/UpdatePostDto.html":{}},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["updates",{"_index":259,"title":{},"body":{"injectables/PostsService.html":{}}}],["updateuser",{"_index":270,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@param('id",{"_index":302,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(id",{"_index":286,"title":{},"body":{"controllers/UserController.html":{}}}],["url",{"_index":76,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":174,"title":{},"body":{"classes/GetUserParamDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["user.controller",{"_index":310,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":189,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":160,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":169,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":166,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":170,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":167,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":311,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":265,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":27,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":267,"title":{},"body":{"controllers/UserController.html":{}}}],["users'})@apiquery({name",{"_index":282,"title":{},"body":{"controllers/UserController.html":{}}}],["users'})@apiresponse({status",{"_index":279,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":308,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validator",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserParamDto.html":{},"classes/UpdatePostDto.html":{},"dependencies.html":{}}}],["value",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":429,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":386,"title":{},"body":{"index.html":{}}}],["website",{"_index":418,"title":{},"body":{"index.html":{}}}],["work",{"_index":298,"title":{},"body":{"controllers/UserController.html":{}}}],["world",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{}}}],["world'})@isstring()@isnotempty()@matches(/^[a",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["world'})@isstring()@isoptional",{"_index":72,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["world'})@isstring()@minlength(4)@isnotempty",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["you'd",{"_index":407,"title":{},"body":{"index.html":{}}}],["z0",{"_index":104,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["zoom",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPostsModule\n\nPostsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PostsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './user/user.module';\nimport { PostsModule } from './posts/posts.module';\n\n@Module({\n  imports: [UserModule, PostsModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The content of the post', example: 'Hello World'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The featured image URL of the post', example: 'https://example.com/image.jpg'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, description: 'The meta options of the post', items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostType, description: 'The type of the post'})@IsEnum(PostType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The date the post is published on', example: '2021-01-01T00:00:00.000Z'})@IsISO8601()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The schema of the post', example: '{\"type\": \"object\"}'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The slug of the post', example: 'hello-world'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'must be a valid slug'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostStatus, description: 'The status of the post'})@IsEnum(PostStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The tags of the post', example: undefined})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The title of the post', example: 'Hello World'})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { PostStatus } from '../enums/post-status.enum';\nimport { PostType } from '../enums/post-type.enum';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-options.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: 'The title of the post',\n    example: 'Hello World',\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: PostType,\n    description: 'The type of the post',\n  })\n  @IsEnum(PostType)\n  postType: PostType;\n\n  @ApiProperty({\n    description: 'The slug of the post',\n    example: 'hello-world',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message: 'must be a valid slug',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: PostStatus,\n    description: 'The status of the post',\n  })\n  @IsEnum(PostStatus)\n  @IsNotEmpty()\n  status: PostStatus;\n\n  @ApiPropertyOptional({\n    description: 'The content of the post',\n    example: 'Hello World',\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'The schema of the post',\n    example: '{\"type\": \"object\"}',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'The featured image URL of the post',\n    example: 'https://example.com/image.jpg',\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiProperty({\n    description: 'The date the post is published on',\n    example: '2021-01-01T00:00:00.000Z',\n  })\n  @IsISO8601()\n  publishOn: Date;\n\n  @ApiPropertyOptional({\n    description: 'The tags of the post',\n    example: ['tag1', 'tag2'],\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    description: 'The meta options of the post',\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          example: 'nestjs',\n        },\n        value: {\n          type: 'string',\n          example: 'nestjs',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post-meta-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsString()\n  @IsNotEmpty()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  lastName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserParamDto.html":{"url":"classes/GetUserParamDto.html","title":"class - GetUserParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/get-user-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User id', example: 1234})@IsInt()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/get-user-param.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsOptional } from 'class-validator';\n\nexport class GetUserParamDto {\n  @ApiPropertyOptional({\n    description: 'User id',\n    example: 1234,\n  })\n  @IsInt()\n  @IsOptional()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/path-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/entities/post.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new post'})@ApiResponse({status: 201, description: 'The post has been successfully created'})\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePostDto: UpdatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePostDto\n                                            \n                                                            UpdatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new post' })\n  @ApiResponse({\n    status: 201,\n    description: 'The post has been successfully created',\n  })\n  create(@Body() createPostDto: CreatePostDto) {\n    return this.postsService.create(createPostDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.postsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.postsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePostDto: UpdatePostDto) {\n    return this.postsService.update(+id, updatePostDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.postsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nPostsService\n\nPostsService\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { PostsController } from './posts.controller';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPostDto: CreatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/posts.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/posts.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/posts.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/posts.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePostDto: UpdatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/posts.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePostDto\n                                            \n                                                            UpdatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\n\n@Injectable()\nexport class PostsService {\n  create(createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n    return 'This action adds a new post';\n  }\n\n  findAll() {\n    return `This action returns all posts`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} post`;\n  }\n\n  update(id: number, updatePostDto: UpdatePostDto) {\n    return `This action updates a #${id} post`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} post`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePostDto.html":{"url":"classes/UpdatePostDto.html","title":"class - UpdatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/update-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the post'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/update-post.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreatePostDto } from './create-post.dto';\nimport { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class UpdatePostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The id of the post',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getUsers\n                            \n                            \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(body: CreateUserDto, ip)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUserParamDto, query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id?')@ApiOperation({summary: 'Fetches all registered users'})@ApiResponse({status: 200})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'Limit the number of users'})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, body: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Ip,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { GetUserParamDto } from './dto/get-user-param.dto';\nimport { PatchUserDto } from './dto/path-user.dto';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UserController {\n  @Get(':id?')\n  @ApiOperation({ summary: 'Fetches all registered users' })\n  @ApiResponse({\n    status: 200,\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'Limit the number of users',\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description: 'The position of the page',\n  })\n  getUsers(@Param() getUserParamDto: GetUserParamDto, @Query() query: any) {\n    console.log(getUserParamDto);\n    console.log(query);\n    return 'work';\n  }\n\n  @Post()\n  createUser(@Body() body: CreateUserDto, @Ip() ip) {\n    console.log(ip);\n    console.log(body);\n    return 'user created';\n  }\n\n  @Patch(':id')\n  updateUser(@Param('id') id: string, @Body() body: PatchUserDto) {\n    console.log(id);\n    console.log(body);\n    return 'user updated';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; name: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {\n  findById(id: number) {\n    return {\n      id: id,\n      name: 'John Doe',\n      email: 'serhijsav@gmail.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dto/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dto/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dto/update-post.dto.ts\n            \n            class\n            UpdatePostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/entities/post.entity.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/posts/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/get-user-param.dto.ts\n            \n            class\n            GetUserParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/path-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostStatus   (src/.../post-status.enum.ts)\n                        \n                        \n                            PostType   (src/.../post-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/post-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostStatus\n                    \n                \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 ARCHIVED\n                            \n                        \n                        \n                            \n                                Value : archived\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : deleted\n                            \n                        \n            \n        \n\n    src/posts/enums/post-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPostsModule\n\nPostsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
